<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BigOrange Blog</title>
  
  <subtitle>个人记录</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://biglorange.github.io/"/>
  <updated>2019-05-03T06:22:14.332Z</updated>
  <id>https://biglorange.github.io/</id>
  
  <author>
    <name>BigOrange</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>不知道第几个脚本</title>
    <link href="https://biglorange.github.io/2018/11/13/%E4%B8%8D%E7%9F%A5%E9%81%93%E7%AC%AC%E5%87%A0%E4%B8%AA%E8%84%9A%E6%9C%AC/"/>
    <id>https://biglorange.github.io/2018/11/13/不知道第几个脚本/</id>
    <published>2018-11-13T04:31:33.000Z</published>
    <updated>2019-05-03T06:22:14.332Z</updated>
    
    <content type="html"><![CDATA[<p>起因</p><p>在 B 站看到一期视频<a href="https://www.bilibili.com/video/av22403776?t=174" target="_blank" rel="noopener">禁用笔记本内置键盘</a>，感觉手动操作还是有一点麻烦，所以写了一个小的 shell 脚本，在 zsh 中设置 alias 别名使用，但还是觉得有一些麻烦，改进了第二版，对是否插着外接键盘进行判断，再进行禁用，第三版目标，实现自动化</p><p>第一版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/bin/bash</span></span><br><span class="line">id=$(xinput | grep AT | cut -c53-54)</span><br><span class="line">xinput <span class="built_in">set</span>-prop <span class="variable">$id</span> <span class="string">"Device Enabled"</span> 0</span><br></pre></td></tr></table></figure><p>第二版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/bin/bash</span></span><br><span class="line"><span class="comment">#echo $1</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> == <span class="string">"disable"</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">usbkeyboard=<span class="string">''</span></span><br><span class="line">usbkeyboard=$(xinput | grep <span class="string">"USB Keyboard"</span> | sed -n <span class="string">'2p'</span>)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$usbkeyboard</span>"</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"USB Keyboard Plugged"</span></span><br><span class="line">id=$(xinput | grep AT | cut -c53-54)</span><br><span class="line">xinput <span class="built_in">set</span>-prop <span class="variable">$id</span> <span class="string">"Device Enabled"</span> 0</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Inner Keyboard disabled"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">" USB Keyboard NOT Plugged,please check!"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$1</span> == <span class="string">"enable"</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">id=$(xinput | grep AT | cut -c53-54)</span><br><span class="line">xinput <span class="built_in">set</span>-prop <span class="variable">$id</span> <span class="string">"Device Enabled"</span> 1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Inner Keyboard enabled"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>第三版</p><p>使用 udev 规则进行触发脚本</p><h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="https://segmentfault.com/a/1190000011010908" target="_blank" rel="noopener">Linux Udev</a></p><p><a href="https://winddoing.github.io/post/3820.html" target="_blank" rel="noopener">udev 的使用</a></p><p><a href="http://www.xzcblog.com/post-266.html" target="_blank" rel="noopener">通过udev自动检测外置键盘并开启关闭内置键盘</a></p><p><a href="https://harttle.land/2013/10/27/synaptics-settings-linux.html" target="_blank" rel="noopener">外接鼠标禁用触摸板</a></p>]]></content>
    
    <summary type="html">
    
      在外接键盘时禁用笔记本内置键盘，防止误触
    
    </summary>
    
      <category term="script" scheme="https://biglorange.github.io/categories/script/"/>
    
      <category term="shell" scheme="https://biglorange.github.io/categories/script/shell/"/>
    
    
      <category term="linux" scheme="https://biglorange.github.io/tags/linux/"/>
    
      <category term="script" scheme="https://biglorange.github.io/tags/script/"/>
    
      <category term="shell" scheme="https://biglorange.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>fcitx</title>
    <link href="https://biglorange.github.io/2018/10/31/%E6%9A%B4%E5%8A%9B%E8%A7%A3%E5%86%B3%20fcitx%20sogou%20%E9%AB%98%20cpu%20%E5%8D%A0%E7%94%A8/"/>
    <id>https://biglorange.github.io/2018/10/31/暴力解决 fcitx sogou 高 cpu 占用/</id>
    <published>2018-10-31T14:31:40.000Z</published>
    <updated>2018-10-31T14:45:36.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>Linux 下中文输入法搜狗算是比较好用的，但是存在不定时 CPU 占用飙升的 BUG ，Linux 下又没有比搜狗好用的中文拼音输入法（个人观点），关闭搜狗云联想可以解决这个问题，但是使用体验下降，通过脚本检测的方式监控搜狗输入法 CPU 占用率，高于阈值 Kill 。</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>创建脚本文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/<span class="built_in">local</span>/bin/fcitx_high_cpu_kill.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">PROCESS=<span class="string">"fcitx"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get_pid_x &#123; <span class="comment">#process</span></span><br><span class="line"></span><br><span class="line">PID=<span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ ! <span class="variable">$PID</span> ]; <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">PID=$(pidof <span class="variable">$1</span>)</span><br><span class="line"></span><br><span class="line">sleep 1</span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PID</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get_consume_cpu_process &#123; <span class="comment">#PID</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $(top -b -p <span class="variable">$1</span> -n 1 | tail -n 1 | awk <span class="string">'&#123;print $9&#125;'</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pid=$(get_pid_x <span class="variable">$PROCESS</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [[ 1 ]]; <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#echo "the fcitx's pid is $pid"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#echo "the fcitx consumes $(get_consume_cpu_process $pid)%"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ $(get_consume_cpu_process <span class="variable">$pid</span>) &gt; 10.0 ]]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">times</span>=4</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [[ <span class="built_in">times</span> &gt; 0 ]]; <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">sleep 1</span><br><span class="line"></span><br><span class="line"><span class="built_in">times</span>=$((<span class="variable">$times</span>-1))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ $(get_consume_cpu_process <span class="variable">$pid</span>) &lt; 10.0 ]]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> [[ $(get_consume_cpu_process <span class="variable">$pid</span>) &gt; 10.0 &amp;&amp; <span class="built_in">times</span> = 0 ]]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#echo "kill the process $pid."</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> <span class="variable">$pid</span></span><br><span class="line"></span><br><span class="line">pid=$(get_pid_x <span class="variable">$PROCESS</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#else</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#echo "not need to kill the process $pid"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sleep 4</span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>赋予脚本可执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/fcitx_high_cpu_kill.sh</span><br></pre></td></tr></table></figure><p>创建 .service 文件通过 systemd 管理脚本自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/fcitx_cpu_limit.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Autostart Scripts</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/bin/sh /usr/<span class="built_in">local</span>/bin/fcitx_high_cpu_kill.sh</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">After=display-manager.service</span><br></pre></td></tr></table></figure><p>启动 .service 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> fcitx_cpu_limit.service</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      暴力使用脚本检测 fcitx-sogou cpu 使用率，高于阈值 kill 掉。
    
    </summary>
    
      <category term="Arch Linux" scheme="https://biglorange.github.io/categories/Arch-Linux/"/>
    
      <category term="sogou" scheme="https://biglorange.github.io/categories/Arch-Linux/sogou/"/>
    
    
      <category term="Arch Linux" scheme="https://biglorange.github.io/tags/Arch-Linux/"/>
    
      <category term="fcitx" scheme="https://biglorange.github.io/tags/fcitx/"/>
    
      <category term="sogou" scheme="https://biglorange.github.io/tags/sogou/"/>
    
      <category term="systemd" scheme="https://biglorange.github.io/tags/systemd/"/>
    
  </entry>
  
  <entry>
    <title>显卡驱动作死</title>
    <link href="https://biglorange.github.io/2018/10/29/%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8%E4%BD%9C%E6%AD%BB/"/>
    <id>https://biglorange.github.io/2018/10/29/显卡驱动作死/</id>
    <published>2018-10-29T10:14:15.000Z</published>
    <updated>2019-05-03T07:16:58.757Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>由于是本来就能使用 bumblebee ，所以只是卸载掉 bumblebee 之后安装nvidia-prime。</p><p>系统版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">                  -`                    orange@BiGOranGe </span><br><span class="line">                 .o+`                   ---------------- </span><br><span class="line">                `ooo/                   OS: Arch Linux x86_64 </span><br><span class="line">               `+oooo:                  Host: Aspire VN7-591G V1.15 </span><br><span class="line">              `+oooooo:                 Kernel: 4.18.16-arch1-1-ARCH </span><br><span class="line">              -+oooooo+:                Uptime: 9 mins </span><br><span class="line">            `/:-:++oooo+:               Packages: 1852 (pacman) </span><br><span class="line">           `/++++/+++++++:              Shell: zsh 5.6.2 </span><br><span class="line">          `/++++++++++++++:             Resolution: 1920x1080 </span><br><span class="line">         `/+++ooooooooooooo/`           DE: Deepin </span><br><span class="line">        ./ooosssso++osssssso+`          WM: Mutter(DeepinGala) </span><br><span class="line">       .oossssso-````/ossssss+`         Theme: Adapta-Nokto [GTK2/3] </span><br><span class="line">      -osssssso.      :ssssssso.        Icons: Numix-Circle [GTK2/3] </span><br><span class="line">     :osssssss/        osssso+++.       Terminal: deepin-terminal </span><br><span class="line">    /ossssssss/        +ssssooo/-       Terminal Font: Noto Mono <span class="keyword">for</span> Powerline 11 </span><br><span class="line">  `/ossssso+/:-        -:/+osssso+-     CPU: Intel i5-4210H (4) @ 3.500GHz </span><br><span class="line"> `+sso+:-`                 `.-/+oso:    GPU: Intel 4th Gen Core Processor </span><br><span class="line">`++:.                           `-/+/   GPU: NVIDIA GeForce GTX 860M </span><br><span class="line">.`                                 `/   Memory: 2926MiB / 7899MiB</span><br></pre></td></tr></table></figure><p>nvidia 版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Mon Oct 29 18:37:30 2018       </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 410.66       Driver Version: 410.66       CUDA Version: 10.0     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  GeForce GTX 860M    Off  | 00000000:01:00.0 Off |                  N/A |</span><br><span class="line">| N/A   49C    P8    N/A /  N/A |    640MiB /  2004MiB |      7%      Default |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                               </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                       GPU Memory |</span><br><span class="line">|  GPU       PID   Type   Process name                             Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|    0       549      G   /usr/lib/Xorg                                258MiB |</span><br><span class="line">|    0       674      G   deepin-wm                                    216MiB |</span><br><span class="line">|    0      1546      G   ...ge/.<span class="built_in">local</span>/share/Steam/ubuntu12_32/steam    37MiB |</span><br><span class="line">|    0      1555      G   ./steamwebhelper                               2MiB |</span><br><span class="line">|    0      3683      G   ...uest-channel-token=16256402389774494101    94MiB |</span><br><span class="line">|    0      4595      G   ...-token=D2D86F812F487F5D39D0389BF2F103BD    25MiB |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><p>桌面环境(DDE)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deepin desktop environment</span><br></pre></td></tr></table></figure><p>卸载 bumblebee</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yaourt -Rnsc bumblebee</span><br></pre></td></tr></table></figure><h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><p>如果是全新安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yaourt -S nvidia nvidia-utils xorg-xrandr</span><br></pre></td></tr></table></figure><p>配置 /etc/X11/xorg.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Section <span class="string">"Module"</span></span><br><span class="line">    Load <span class="string">"modesetting"</span></span><br><span class="line">EndSection</span><br><span class="line">Section <span class="string">"Device"</span></span><br><span class="line">    Identifier <span class="string">"nvidia"</span></span><br><span class="line">    Driver <span class="string">"nvidia"</span></span><br><span class="line">    BusID <span class="string">"PCI:1:0:0"</span>  <span class="comment">#BusID</span></span><br><span class="line">    Option <span class="string">"AllowEmptyInitialConfiguration"</span></span><br><span class="line">    Option <span class="string">"OnDemandVBlankInterrupts"</span> <span class="string">"1"</span></span><br><span class="line">    Option <span class="string">"NoLogo"</span> <span class="string">"1"</span></span><br><span class="line">    Option <span class="string">"RenderAccel"</span> <span class="string">"1"</span></span><br><span class="line">    <span class="comment"># Option "TripleBuffer" "1"</span></span><br><span class="line">    <span class="comment"># 强制Powermizer任何时间都在在特定级别</span></span><br><span class="line">    <span class="comment"># level 0x1=highest</span></span><br><span class="line">    <span class="comment"># level 0x2=med</span></span><br><span class="line">    <span class="comment"># level 0x3=lowest</span></span><br><span class="line">    <span class="comment"># 交流电源设置：</span></span><br><span class="line">    <span class="comment"># Option "RegistryDwords" "PowerMizerLevelAC=0x3"</span></span><br><span class="line">    <span class="comment"># Option "Coolbits" "1"</span></span><br><span class="line">EndSection</span><br><span class="line">Section <span class="string">"Device"</span></span><br><span class="line">    Identifier  <span class="string">"intel"</span></span><br><span class="line">    Driver      <span class="string">"modesetting"</span></span><br><span class="line">    BusID       <span class="string">"PCI:0:2:0"</span></span><br><span class="line">    Option      <span class="string">"AccelMethod"</span>  <span class="string">"sna"</span></span><br><span class="line">    <span class="comment">#Option      "TearFree" "True"</span></span><br><span class="line">    <span class="comment">#Option      "Tiling" "True"</span></span><br><span class="line">    <span class="comment">#Option      "SwapbuffersWait" "True"</span></span><br><span class="line">EndSection</span><br><span class="line">Section <span class="string">"ServerLayout"</span></span><br><span class="line">    Identifier <span class="string">"layout"</span></span><br><span class="line">    <span class="comment">#Screen 1 "nvidia"</span></span><br><span class="line">    Inactive <span class="string">"intel"</span></span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure><p>其中 BusID 必须和 lspci 命令输出相匹配</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lspci | grep 3D</span><br><span class="line">01:00.0 3D controller: NVIDIA Corporation GM107M [GeForce GTX 860M] (rev a2)</span><br></pre></td></tr></table></figure><p>BusID 由 lspci 输出 01:00.00 转换而来，转换结果： 1:0:0</p><p>使用显示管理器 (Display Manager, DM) ，需要编辑启动管理脚本来使用 nvidia 显卡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/lightdm/display_setup.sh</span><br><span class="line">xrandr --setprovideroutputsource modesetting NVIDIA-0</span><br><span class="line">xrandr --auto</span><br><span class="line">xrandr --dpi 99 <span class="comment">#官方 wiki 参数为 96，个人电脑 96 浏览器字体模糊，修改为 99 个人使用良好</span></span><br></pre></td></tr></table></figure><p>赋予脚本可执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x /etc/lightdm/display_setup.sh</span><br></pre></td></tr></table></figure><p>编辑 <code>/etc/lightdm/lightdm.conf</code> 的 <code>[Seat:*]</code> 部分以配置 lightdm 运行这个脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/lightdm/lightdm.conf</span><br><span class="line">[Seat:*]</span><br><span class="line">display-setup-script=/etc/lightdm/display_setup.sh</span><br></pre></td></tr></table></figure><p>其他显示管理器修改方式： <a href="https://wiki.archlinux.org/index.php/NVIDIA_Optimus_\(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\)" target="_blank" rel="noopener">NVIDIA Optimus</a></p><p>重启即可应用。</p><h3 id="性能检验"><a href="#性能检验" class="headerlink" title="性能检验"></a>性能检验</h3><p>古墓丽影 9 帧数提升明显</p><p>使用 bumblebee 时忘记截图了，最低27，最高 40左右，平均在30帧附近</p><p>使用 nvidia-prime ，帧数</p><div class="table-container"><table><thead><tr><th></th><th>帧数</th></tr></thead><tbody><tr><td>最低</td><td>33</td></tr><tr><td>最高</td><td>68</td></tr><tr><td>平均</td><td>55.1</td></tr></tbody></table></div><p><img src="/2018/10/29/显卡驱动作死/DeepinScreenshot_TombRaider_20181029194600.png" alt="DeepinScreenshot_TombRaider_20181029194600"></p><p>画面配置详情</p><p><img src="/2018/10/29/显卡驱动作死/DeepinScreenshot_TombRaider_20181029194636.png" alt="DeepinScreenshot_TombRaider_20181029194636.png"></p><p><img src="/2018/10/29/显卡驱动作死/DeepinScreenshot_TombRaider_20181029194654.png" alt="DeepinScreenshot_TombRaider_20181029194654.png"></p><p>系统主要硬件信息</p><div class="table-container"><table><thead><tr><th>硬件</th><th>型号</th></tr></thead><tbody><tr><td>CPU</td><td>i5-4210HQ</td></tr><tr><td>GPU</td><td>GTX860M</td></tr><tr><td>RAM</td><td>DDR3L 8G</td></tr></tbody></table></div>]]></content>
    
    <summary type="html">
    
      emmm，本来 bumblebee 使用的挺好的，但是 optirun 游戏性能很捉急，所以冲动之下换成 nvidia-prime 驱动显卡。
    
    </summary>
    
      <category term="nVidia" scheme="https://biglorange.github.io/categories/nVidia/"/>
    
      <category term="Arch Linux" scheme="https://biglorange.github.io/categories/nVidia/Arch-Linux/"/>
    
    
      <category term="Arch Linux" scheme="https://biglorange.github.io/tags/Arch-Linux/"/>
    
      <category term="nvidia" scheme="https://biglorange.github.io/tags/nvidia/"/>
    
      <category term="nvidia-primes" scheme="https://biglorange.github.io/tags/nvidia-primes/"/>
    
      <category term="bumblebee" scheme="https://biglorange.github.io/tags/bumblebee/"/>
    
  </entry>
  
</feed>
